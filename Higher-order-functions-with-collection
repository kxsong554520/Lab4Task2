//1. forEach()
class Cookie(
    val name: String,
    val softBaked: Boolean,
    val hasFilling: Boolean,
    val price: Double
)

val cookies = listOf(
    Cookie(
        name = "Chocolate Chip",
        softBaked = false,
        hasFilling = false,
        price = 1.69
    ),
    Cookie(
        name = "Banana Walnut", 
        softBaked = true, 
        hasFilling = false, 
        price = 1.49
    ),
    Cookie(
        name = "Vanilla Creme",
        softBaked = false,
        hasFilling = true,
        price = 1.59
    ),
    Cookie(
        name = "Chocolate Peanut Butter",
        softBaked = false,
        hasFilling = true,
        price = 1.49
    ),
    Cookie(
        name = "Snickerdoodle",
        softBaked = true,
        hasFilling = false,
        price = 1.39
    ),
    Cookie(
        name = "Blueberry Tart",
        softBaked = true,
        hasFilling = true,
        price = 1.79
    ),
    Cookie(
        name = "Sugar and Sprinkles",
        softBaked = false,
        hasFilling = false,
        price = 1.39
    )
)

fun main() {
    cookies.forEach {
        //expression part of a string template must be surrounded with curly braces.
        println("Menu item: ${it.name}")
    }
}

//the following functions will only show the main class as the cookies class and list are the same
// 2. map()
fun main() {
    //map the name of cookie with its price
    val fullMenu = cookies.map {"${it.name} - $${it.price}"}
    println("Full menu:")
	fullMenu.forEach {println(it)}
}

// 3. filter()
fun main() {
    val fullMenu = cookies.map {"${it.name} - $${it.price}"}
    println("Full menu:")
	fullMenu.forEach {println(it)}

    // the filter() fucntion filters out the values of the cookies by softBakedMenu
    val softBakedMenu = cookies.filter {
    it.softBaked
	}
    
    println("Soft cookies:")
	  softBakedMenu.forEach {
    println("${it.name} - $${it.price}")
	}

}

// 4. groupBy()
fun main() {
    val fullMenu = cookies.map {"${it.name} - $${it.price}"}
    println("Full menu:")
	fullMenu.forEach {println(it)}

  //group the cookies into softBakedMenu and crunchyMenu. It is done by using groupBy() function on softBaked cookies and returned true, if returned false it will be grouped into crunchyMenu
	val groupedMenu = cookies.groupBy {it.softBaked}
	val softBakedMenu = groupedMenu[true] ?: listOf()
    val crunchyMenu = groupedMenu[false] ?: listOf()
    
    println("Soft cookies:")
	softBakedMenu.forEach {
    println("${it.name} - $${it.price}")
	}
	println("Crunchy cookies:")
	crunchyMenu.forEach {
    println("${it.name} - $${it.price}")
	}
}

// 5.fold()
fun main() {
    val fullMenu = cookies.map {"${it.name} - $${it.price}"}
    println("Full menu:")
	fullMenu.forEach {println(it)}
    
	val groupedMenu = cookies.groupBy {it.softBaked}
	val softBakedMenu = groupedMenu[true] ?: listOf()
    val crunchyMenu = groupedMenu[false] ?: listOf()
    
    println("Soft cookies:")
	softBakedMenu.forEach {
    println("${it.name} - $${it.price}")
	}
	println("Crunchy cookies:")
	crunchyMenu.forEach {
    println("${it.name} - $${it.price}")
	}
    // fold() calculates the total price for all the cookies
    val totalPrice = cookies.fold(0.0) {
        total, cookie -> total + cookie.price
    }
    println("Total price: $${totalPrice}")
}

// 6.sortedBy()
fun main() {
    val fullMenu = cookies.map {"${it.name} - $${it.price}"}
    println("Full menu:")
	fullMenu.forEach {println(it)}
    
	val groupedMenu = cookies.groupBy {it.softBaked}
	val softBakedMenu = groupedMenu[true] ?: listOf()
    val crunchyMenu = groupedMenu[false] ?: listOf()
    
    println("Soft cookies:")
	softBakedMenu.forEach {
    println("${it.name} - $${it.price}")
	}
	println("Crunchy cookies:")
	crunchyMenu.forEach {
    println("${it.name} - $${it.price}")
	}
    
    val totalPrice = cookies.fold(0.0) {
        total, cookie -> total + cookie.price
    }
    println("Total price: $${totalPrice}")

    //sortedBy {it.nam} to sort the name of the cookies in alphabetical order
    val alphabeticalMenu = cookies.sortedBy {
    	it.name
	}
    println("Alphabetical menu:")
    
	alphabeticalMenu.forEach {
    	println(it.name)
	}
}
